name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Login'
      description: 'This endpoint logs you in and returns API token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email to login.'
        required: true
        example: jshields@example.com
        type: email
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'The password to login.'
        required: true
        example: )u=BY4
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: jshields@example.com
      password: )u=BY4
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "access_token": "<YOUR-AUTH-KEY>"
          }.
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message": "The provided credentials are incorrect"}'
        headers: []
        description: 'wrong login credentials'
        custom: []
    responseFields:
      access_token:
        name: access_token
        description: 'The api token needed to access other `requires authentication` endpoint'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/verify
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Verifies the file.'
      description: |-
        This endpoint lets you verify your file.

        A JSON file is considered as “verified” when it fulfils the following three conditions:
        1. The file has a valid issuer.
        2. The file has a valid recipient.
        3. The file has a valid signature.

        This endpoint return a 200 status code even if the file is not verified
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The file to be verified.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      file: null
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
           "issuer": "Issuer name",
           "result": "verified" // values can be "verified", "invalid_recipient", "invalid_issuer", "invalid_signature"
            }
          }.
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Page Not Found. If error persists, contact info@website.com"}'
        headers: []
        description: 'Something went wrong during verification process'
        custom: []
      -
        status: 500
        content: '{"message": "Failed to encode Json"} or {"message": "Failed to decode Json"} or {"message": "Failed to hash signature"}'
        headers: []
        description: 'Failure to encode/decode Json file or hashing signature hash of the file'
        custom: []
      -
        status: 502
        content: '{"message": "Invalid DNS response"}'
        headers: []
        description: 'Google DNS API returns invalid response'
        custom: []
      -
        status: 503
        content: '{"message": "Failed to lookup DNS"}'
        headers: []
        description: 'Failed to lookup DNS using Google DNS API'
        custom: []
    responseFields:
      issuer:
        name: issuer
        description: 'The name of the issuer of the file'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      result:
        name: result
        description: 'The verification result of the file (`verified` or `invalid_recipient` or `invalid_issuer` or `invalid_signature`)'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6ZD5P4agVb8c3Ef6ekvahd1'
    controller: null
    method: null
    route: null
    custom: []
